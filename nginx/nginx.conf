events {
    worker_connections 1024;
}

http {
    # This is required to proxy Grafana Live WebSocket connections.
    map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
    }

    server {
        listen 80;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html index.htm;

        rewrite ^(.*/grafana)$ $1/ permanent;

        # Spring Boot application
        location / {
            proxy_pass http://springboot:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /grafana/ {
            rewrite ^/grafana/(.*) /$1 break;
            proxy_pass http://grafana:3000/;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Prefix /grafana;

            proxy_redirect http://grafana:3000/ http://$host/grafana/;
            proxy_redirect / /grafana/;

            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # Redirect /grafana to /grafana/
        location = /grafana {
            return 301 /grafana/;
        }

       
    }
}